parameters:
  os: ''

steps:

# Clean
- checkout: self
  clean: true

  # Start collect diagnostics
  - powershell: ./_CI/start-collect-diagnostics.ps1
    displayName: Start collect diagnostics
    condition: and(succeeded(), eq(variables.collect_diagnostics, 'true'))
    
  - task: PowerShell@2
    displayName: 'Dump SourcesDirectory'
    inputs:
      targetType: 'inline'
      script: 'Get-ChildItem -Path $(Build.Repository.LocalPath)'

  - task: PowerShell@2
    displayName: 'Install Pester'
    inputs:
      targetType: 'inline'
      script: 'Install-Module -Name Pester -SkipPublisherCheck -Force -Verbose -Scope CurrentUser'

  - task: PowerShell@2
    displayName: 'Install PSScriptAnalyzer'
    inputs:
      targetType: 'inline'
      script: 'Install-Module -Name PSScriptAnalyzer -SkipPublisherCheck -Force -Verbose -Scope CurrentUser'

  - task: PowerShell@2
    displayName: 'Run PSScriptAnalyzer 2'
    inputs:
      targetType: 'inline'
      script: 'Invoke-ScriptAnalyzer -Path $(Build.SourcesDirectory) -EnableExit -IncludeDefaultRules -ReportSummary -Recurse'

  # Stop collect diagnostics
  - powershell: ./_CI/stop-collect-diagnostics.ps1
    displayName: Stop collect diagnostics
    condition: and(always(), eq(variables.collect_diagnostics, 'true'), ne(variables['numTasks'], 0))
